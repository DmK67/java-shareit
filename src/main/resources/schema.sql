
drop table IF EXISTS users CASCADE;
CREATE TABLE IF NOT EXISTS users (
                                     user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                     user_name VARCHAR(255) NOT NULL,
                                     email VARCHAR(512) NOT NULL,
                                     CONSTRAINT pk_user PRIMARY KEY (user_id),
                                     CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

drop table IF EXISTS item_request CASCADE;
CREATE TABLE IF NOT EXISTS item_request (
                                            request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                            description VARCHAR(255)                   NOT NULL,
                                            user_id BIGINT                             NOT NULL,
                                            created TIMESTAMP WITHOUT TIME ZONE        NOT NUll,
                                            CONSTRAINT pk_item_request PRIMARY KEY (request_id)
);

drop table IF EXISTS items CASCADE;
CREATE TABLE IF NOT EXISTS items
(
    item_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name   VARCHAR(255) not null,
    description VARCHAR(512) not null,
    available   BOOLEAN      not null,
    owner       BIGINT       not null,
    request BIGINT,
    constraint items_pk
        primary key (item_id),
    constraint "items_USERS_id_fk"
        foreign key (owner) references users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_item_item_request FOREIGN KEY (request) REFERENCES item_request(request_id) ON DELETE CASCADE
);

CREATE TYPE IF NOT EXISTS status as ENUM('WAITING', 'APPROVED', 'REJECTED', 'CANCELED');

drop table IF EXISTS BOOKINGS CASCADE;
CREATE TABLE IF NOT EXISTS bookings
(
    ID            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    START_BOOKING TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_BOOKING   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ITEM_ID       BIGINT not null,
    BOOKER_ID     BIGINT not null,
    BOOKING_STATUS PUBLIC.STATUS,
    constraint bookings_pk
        primary key (ID),
    constraint "BOOKINGS_ITEMS_ID_fk"
        foreign key (ITEM_ID) references ITEMS (item_id),
    constraint BOOKINGS_USERS_ID_FK
        foreign key (BOOKER_ID) references USERS (user_id)
);

drop table IF EXISTS COMMENTS CASCADE;
create table COMMENTS
(
    COMMENTS_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    TEXT        CHARACTER VARYING(255) not null,
    ITEM_ID     BIGINT                 not null,
    AUTHOR_ID   BIGINT                 not null,
    constraint COMMENTS_PK
        primary key (COMMENTS_ID)
);

